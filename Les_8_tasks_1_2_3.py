# Урок N8. Списки

# Задание N1. В первой строке вводится число N. Далее в N строк вводится N чисел
# (1 ≤ N ≤ 10000), по одному числу на строке. Все числа по модулю не превышают 10e5.
# Переверните массив чисел. Выведите N чисел - перевернутый массив.

N = int(input("Введите длину: "))
list_n = []
while N > 0:
    list_n.append(int(input("Введите число: ")))
    N -= 1
list_n.reverse()
print(list_n)


# Задание N2. В первую строчку вводится число N (1 ≤ N ≤ 100 000). В следующую строку
# через пробел вводятся N чисел (1 ≤ Ai ≤ 10e9). Вам требуется написать метод, который
# получает на вход массив и изменяет его таким образом, чтобы на первом месте стоял
# последний элемент, на втором -первый, на третьем -второй и т. д. Выведите N чисел
# -измененный массив.

N = int(input("Введите количество чисел: "))
numbers_str = input("Введите числа через пробел: ")
numbers_list = list(map(int, numbers_str.split()))
print(numbers_list)
numbers_list.reverse()
print(numbers_list)

# Задание N3.На берегу реки стояли n рыбаков, все они хотели
# перебраться на другой берег. Одна лодка может выдержать не более m килограмм,
# при этом в лодку помещается не более 2 человек. Определите, какое минимальное
# число лодок нужно, чтобы перевезти на другой берег всех рыбаков В первую строку
# вводится число m (1 ≤ m ≤ 10e6) -максимальная масса, которую может выдержать одна лодка.
# Во вторую строку вводится число n (1 ≤ n ≤ 100) -количество рыбаков.
# В следующие N строк вводится по одному числу Ai (1 ≤ Ai ≤ m) - вес каждого путешественника.
# Программа должна вывести одно число -минимальное количество лодок, необходимое для переправки
# всех рыбаков на противоположный берег

m = int(input("Введите максимальную массу, для одной лодки: "))
n = int(input("Введите количество рыбаков: "))
list_weight = []
while n > 0:
    list_weight.append(int(input("Введите вес человека: ")))
    n -= 1
n = len(list_weight)
list_weight = sorted(list_weight)
print(list_weight)
i = 0
j = n - 1
boats = 0
while i <= j:
    if list_weight[i] + list_weight[j] <= m:
        i += 1
    j -= 1
    boats += 1
print(boats)
